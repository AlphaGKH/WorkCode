// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: display/proto/display_config.proto

#include "display/proto/display_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_display_2fproto_2fdisplay_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_display_2fproto_2fdisplay_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GlobalViewConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_display_2fproto_2fdisplay_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LocalViewConfig;
}  // namespace protobuf_display_2fproto_2fdisplay_5fconfig_2eproto
namespace display {
class GlobalViewConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalViewConfig>
      _instance;
} _GlobalViewConfig_default_instance_;
class LocalViewConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalViewConfig>
      _instance;
} _LocalViewConfig_default_instance_;
class DisplayConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayConfig>
      _instance;
} _DisplayConfig_default_instance_;
}  // namespace display
namespace protobuf_display_2fproto_2fdisplay_5fconfig_2eproto {
static void InitDefaultsGlobalViewConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::display::_GlobalViewConfig_default_instance_;
    new (ptr) ::display::GlobalViewConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::display::GlobalViewConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GlobalViewConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGlobalViewConfig}, {}};

static void InitDefaultsLocalViewConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::display::_LocalViewConfig_default_instance_;
    new (ptr) ::display::LocalViewConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::display::LocalViewConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocalViewConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocalViewConfig}, {}};

static void InitDefaultsDisplayConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::display::_DisplayConfig_default_instance_;
    new (ptr) ::display::DisplayConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::display::DisplayConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DisplayConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDisplayConfig}, {
      &protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::scc_info_GlobalViewConfig.base,
      &protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::scc_info_LocalViewConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GlobalViewConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalViewConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisplayConfig.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::GlobalViewConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::GlobalViewConfig, map_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::GlobalViewConfig, map_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::GlobalViewConfig, lane_buondary_display_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, local_view_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, local_view_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, local_view_back_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, ogm_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, ogm_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, ogm_width_resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, ogm_length_resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, ogm_left_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::LocalViewConfig, ogm_back_lenght_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::DisplayConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::DisplayConfig, global_view_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::display::DisplayConfig, local_view_config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::display::GlobalViewConfig)},
  { 8, -1, sizeof(::display::LocalViewConfig)},
  { 22, -1, sizeof(::display::DisplayConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::display::_GlobalViewConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::display::_LocalViewConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::display::_DisplayConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "display/proto/display_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"display/proto/display_config.proto\022\007di"
      "splay\"X\n\020GlobalViewConfig\022\021\n\tmap_width\030\001"
      " \001(\r\022\022\n\nmap_height\030\002 \001(\r\022\035\n\025lane_buondar"
      "y_display\030\003 \001(\010\"\373\001\n\017LocalViewConfig\022\030\n\020l"
      "ocal_view_width\030\001 \001(\r\022\031\n\021local_view_heig"
      "ht\030\002 \001(\r\022\036\n\026local_view_back_length\030\003 \001(\r"
      "\022\021\n\togm_width\030\004 \001(\r\022\022\n\nogm_length\030\005 \001(\r\022"
      "\034\n\024ogm_width_resolution\030\006 \001(\001\022\035\n\025ogm_len"
      "gth_resolution\030\007 \001(\001\022\026\n\016ogm_left_width\030\010"
      " \001(\r\022\027\n\017ogm_back_lenght\030\t \001(\r\"{\n\rDisplay"
      "Config\0225\n\022global_view_config\030\001 \001(\0132\031.dis"
      "play.GlobalViewConfig\0223\n\021local_view_conf"
      "ig\030\002 \001(\0132\030.display.LocalViewConfigb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 522);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "display/proto/display_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_display_2fproto_2fdisplay_5fconfig_2eproto
namespace display {

// ===================================================================

void GlobalViewConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalViewConfig::kMapWidthFieldNumber;
const int GlobalViewConfig::kMapHeightFieldNumber;
const int GlobalViewConfig::kLaneBuondaryDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalViewConfig::GlobalViewConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::scc_info_GlobalViewConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:display.GlobalViewConfig)
}
GlobalViewConfig::GlobalViewConfig(const GlobalViewConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&map_width_, &from.map_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&lane_buondary_display_) -
    reinterpret_cast<char*>(&map_width_)) + sizeof(lane_buondary_display_));
  // @@protoc_insertion_point(copy_constructor:display.GlobalViewConfig)
}

void GlobalViewConfig::SharedCtor() {
  ::memset(&map_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_buondary_display_) -
      reinterpret_cast<char*>(&map_width_)) + sizeof(lane_buondary_display_));
}

GlobalViewConfig::~GlobalViewConfig() {
  // @@protoc_insertion_point(destructor:display.GlobalViewConfig)
  SharedDtor();
}

void GlobalViewConfig::SharedDtor() {
}

void GlobalViewConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GlobalViewConfig::descriptor() {
  ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GlobalViewConfig& GlobalViewConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::scc_info_GlobalViewConfig.base);
  return *internal_default_instance();
}


void GlobalViewConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:display.GlobalViewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&map_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_buondary_display_) -
      reinterpret_cast<char*>(&map_width_)) + sizeof(lane_buondary_display_));
  _internal_metadata_.Clear();
}

bool GlobalViewConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:display.GlobalViewConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 map_width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 map_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool lane_buondary_display = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lane_buondary_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:display.GlobalViewConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:display.GlobalViewConfig)
  return false;
#undef DO_
}

void GlobalViewConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:display.GlobalViewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 map_width = 1;
  if (this->map_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->map_width(), output);
  }

  // uint32 map_height = 2;
  if (this->map_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->map_height(), output);
  }

  // bool lane_buondary_display = 3;
  if (this->lane_buondary_display() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->lane_buondary_display(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:display.GlobalViewConfig)
}

::google::protobuf::uint8* GlobalViewConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:display.GlobalViewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 map_width = 1;
  if (this->map_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->map_width(), target);
  }

  // uint32 map_height = 2;
  if (this->map_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->map_height(), target);
  }

  // bool lane_buondary_display = 3;
  if (this->lane_buondary_display() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->lane_buondary_display(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:display.GlobalViewConfig)
  return target;
}

size_t GlobalViewConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:display.GlobalViewConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 map_width = 1;
  if (this->map_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_width());
  }

  // uint32 map_height = 2;
  if (this->map_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_height());
  }

  // bool lane_buondary_display = 3;
  if (this->lane_buondary_display() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalViewConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:display.GlobalViewConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalViewConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalViewConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:display.GlobalViewConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:display.GlobalViewConfig)
    MergeFrom(*source);
  }
}

void GlobalViewConfig::MergeFrom(const GlobalViewConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:display.GlobalViewConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map_width() != 0) {
    set_map_width(from.map_width());
  }
  if (from.map_height() != 0) {
    set_map_height(from.map_height());
  }
  if (from.lane_buondary_display() != 0) {
    set_lane_buondary_display(from.lane_buondary_display());
  }
}

void GlobalViewConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:display.GlobalViewConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalViewConfig::CopyFrom(const GlobalViewConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:display.GlobalViewConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalViewConfig::IsInitialized() const {
  return true;
}

void GlobalViewConfig::Swap(GlobalViewConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalViewConfig::InternalSwap(GlobalViewConfig* other) {
  using std::swap;
  swap(map_width_, other->map_width_);
  swap(map_height_, other->map_height_);
  swap(lane_buondary_display_, other->lane_buondary_display_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GlobalViewConfig::GetMetadata() const {
  protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalViewConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalViewConfig::kLocalViewWidthFieldNumber;
const int LocalViewConfig::kLocalViewHeightFieldNumber;
const int LocalViewConfig::kLocalViewBackLengthFieldNumber;
const int LocalViewConfig::kOgmWidthFieldNumber;
const int LocalViewConfig::kOgmLengthFieldNumber;
const int LocalViewConfig::kOgmWidthResolutionFieldNumber;
const int LocalViewConfig::kOgmLengthResolutionFieldNumber;
const int LocalViewConfig::kOgmLeftWidthFieldNumber;
const int LocalViewConfig::kOgmBackLenghtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalViewConfig::LocalViewConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::scc_info_LocalViewConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:display.LocalViewConfig)
}
LocalViewConfig::LocalViewConfig(const LocalViewConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&local_view_width_, &from.local_view_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&ogm_back_lenght_) -
    reinterpret_cast<char*>(&local_view_width_)) + sizeof(ogm_back_lenght_));
  // @@protoc_insertion_point(copy_constructor:display.LocalViewConfig)
}

void LocalViewConfig::SharedCtor() {
  ::memset(&local_view_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ogm_back_lenght_) -
      reinterpret_cast<char*>(&local_view_width_)) + sizeof(ogm_back_lenght_));
}

LocalViewConfig::~LocalViewConfig() {
  // @@protoc_insertion_point(destructor:display.LocalViewConfig)
  SharedDtor();
}

void LocalViewConfig::SharedDtor() {
}

void LocalViewConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalViewConfig::descriptor() {
  ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalViewConfig& LocalViewConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::scc_info_LocalViewConfig.base);
  return *internal_default_instance();
}


void LocalViewConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:display.LocalViewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&local_view_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ogm_back_lenght_) -
      reinterpret_cast<char*>(&local_view_width_)) + sizeof(ogm_back_lenght_));
  _internal_metadata_.Clear();
}

bool LocalViewConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:display.LocalViewConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 local_view_width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_view_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_view_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_view_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_view_back_length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_view_back_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ogm_width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ogm_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ogm_length = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ogm_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ogm_width_resolution = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ogm_width_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ogm_length_resolution = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ogm_length_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ogm_left_width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ogm_left_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ogm_back_lenght = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ogm_back_lenght_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:display.LocalViewConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:display.LocalViewConfig)
  return false;
#undef DO_
}

void LocalViewConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:display.LocalViewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 local_view_width = 1;
  if (this->local_view_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->local_view_width(), output);
  }

  // uint32 local_view_height = 2;
  if (this->local_view_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->local_view_height(), output);
  }

  // uint32 local_view_back_length = 3;
  if (this->local_view_back_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->local_view_back_length(), output);
  }

  // uint32 ogm_width = 4;
  if (this->ogm_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ogm_width(), output);
  }

  // uint32 ogm_length = 5;
  if (this->ogm_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ogm_length(), output);
  }

  // double ogm_width_resolution = 6;
  if (this->ogm_width_resolution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->ogm_width_resolution(), output);
  }

  // double ogm_length_resolution = 7;
  if (this->ogm_length_resolution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->ogm_length_resolution(), output);
  }

  // uint32 ogm_left_width = 8;
  if (this->ogm_left_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->ogm_left_width(), output);
  }

  // uint32 ogm_back_lenght = 9;
  if (this->ogm_back_lenght() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->ogm_back_lenght(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:display.LocalViewConfig)
}

::google::protobuf::uint8* LocalViewConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:display.LocalViewConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 local_view_width = 1;
  if (this->local_view_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->local_view_width(), target);
  }

  // uint32 local_view_height = 2;
  if (this->local_view_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->local_view_height(), target);
  }

  // uint32 local_view_back_length = 3;
  if (this->local_view_back_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->local_view_back_length(), target);
  }

  // uint32 ogm_width = 4;
  if (this->ogm_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ogm_width(), target);
  }

  // uint32 ogm_length = 5;
  if (this->ogm_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ogm_length(), target);
  }

  // double ogm_width_resolution = 6;
  if (this->ogm_width_resolution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->ogm_width_resolution(), target);
  }

  // double ogm_length_resolution = 7;
  if (this->ogm_length_resolution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->ogm_length_resolution(), target);
  }

  // uint32 ogm_left_width = 8;
  if (this->ogm_left_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->ogm_left_width(), target);
  }

  // uint32 ogm_back_lenght = 9;
  if (this->ogm_back_lenght() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->ogm_back_lenght(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:display.LocalViewConfig)
  return target;
}

size_t LocalViewConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:display.LocalViewConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 local_view_width = 1;
  if (this->local_view_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_view_width());
  }

  // uint32 local_view_height = 2;
  if (this->local_view_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_view_height());
  }

  // uint32 local_view_back_length = 3;
  if (this->local_view_back_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_view_back_length());
  }

  // uint32 ogm_width = 4;
  if (this->ogm_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ogm_width());
  }

  // double ogm_width_resolution = 6;
  if (this->ogm_width_resolution() != 0) {
    total_size += 1 + 8;
  }

  // uint32 ogm_length = 5;
  if (this->ogm_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ogm_length());
  }

  // uint32 ogm_left_width = 8;
  if (this->ogm_left_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ogm_left_width());
  }

  // double ogm_length_resolution = 7;
  if (this->ogm_length_resolution() != 0) {
    total_size += 1 + 8;
  }

  // uint32 ogm_back_lenght = 9;
  if (this->ogm_back_lenght() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ogm_back_lenght());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalViewConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:display.LocalViewConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalViewConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalViewConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:display.LocalViewConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:display.LocalViewConfig)
    MergeFrom(*source);
  }
}

void LocalViewConfig::MergeFrom(const LocalViewConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:display.LocalViewConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_view_width() != 0) {
    set_local_view_width(from.local_view_width());
  }
  if (from.local_view_height() != 0) {
    set_local_view_height(from.local_view_height());
  }
  if (from.local_view_back_length() != 0) {
    set_local_view_back_length(from.local_view_back_length());
  }
  if (from.ogm_width() != 0) {
    set_ogm_width(from.ogm_width());
  }
  if (from.ogm_width_resolution() != 0) {
    set_ogm_width_resolution(from.ogm_width_resolution());
  }
  if (from.ogm_length() != 0) {
    set_ogm_length(from.ogm_length());
  }
  if (from.ogm_left_width() != 0) {
    set_ogm_left_width(from.ogm_left_width());
  }
  if (from.ogm_length_resolution() != 0) {
    set_ogm_length_resolution(from.ogm_length_resolution());
  }
  if (from.ogm_back_lenght() != 0) {
    set_ogm_back_lenght(from.ogm_back_lenght());
  }
}

void LocalViewConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:display.LocalViewConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalViewConfig::CopyFrom(const LocalViewConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:display.LocalViewConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalViewConfig::IsInitialized() const {
  return true;
}

void LocalViewConfig::Swap(LocalViewConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalViewConfig::InternalSwap(LocalViewConfig* other) {
  using std::swap;
  swap(local_view_width_, other->local_view_width_);
  swap(local_view_height_, other->local_view_height_);
  swap(local_view_back_length_, other->local_view_back_length_);
  swap(ogm_width_, other->ogm_width_);
  swap(ogm_width_resolution_, other->ogm_width_resolution_);
  swap(ogm_length_, other->ogm_length_);
  swap(ogm_left_width_, other->ogm_left_width_);
  swap(ogm_length_resolution_, other->ogm_length_resolution_);
  swap(ogm_back_lenght_, other->ogm_back_lenght_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalViewConfig::GetMetadata() const {
  protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayConfig::InitAsDefaultInstance() {
  ::display::_DisplayConfig_default_instance_._instance.get_mutable()->global_view_config_ = const_cast< ::display::GlobalViewConfig*>(
      ::display::GlobalViewConfig::internal_default_instance());
  ::display::_DisplayConfig_default_instance_._instance.get_mutable()->local_view_config_ = const_cast< ::display::LocalViewConfig*>(
      ::display::LocalViewConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisplayConfig::kGlobalViewConfigFieldNumber;
const int DisplayConfig::kLocalViewConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayConfig::DisplayConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::scc_info_DisplayConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:display.DisplayConfig)
}
DisplayConfig::DisplayConfig(const DisplayConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_global_view_config()) {
    global_view_config_ = new ::display::GlobalViewConfig(*from.global_view_config_);
  } else {
    global_view_config_ = NULL;
  }
  if (from.has_local_view_config()) {
    local_view_config_ = new ::display::LocalViewConfig(*from.local_view_config_);
  } else {
    local_view_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:display.DisplayConfig)
}

void DisplayConfig::SharedCtor() {
  ::memset(&global_view_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&local_view_config_) -
      reinterpret_cast<char*>(&global_view_config_)) + sizeof(local_view_config_));
}

DisplayConfig::~DisplayConfig() {
  // @@protoc_insertion_point(destructor:display.DisplayConfig)
  SharedDtor();
}

void DisplayConfig::SharedDtor() {
  if (this != internal_default_instance()) delete global_view_config_;
  if (this != internal_default_instance()) delete local_view_config_;
}

void DisplayConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DisplayConfig::descriptor() {
  ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayConfig& DisplayConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::scc_info_DisplayConfig.base);
  return *internal_default_instance();
}


void DisplayConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:display.DisplayConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && global_view_config_ != NULL) {
    delete global_view_config_;
  }
  global_view_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && local_view_config_ != NULL) {
    delete local_view_config_;
  }
  local_view_config_ = NULL;
  _internal_metadata_.Clear();
}

bool DisplayConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:display.DisplayConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .display.GlobalViewConfig global_view_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_global_view_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .display.LocalViewConfig local_view_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_local_view_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:display.DisplayConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:display.DisplayConfig)
  return false;
#undef DO_
}

void DisplayConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:display.DisplayConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .display.GlobalViewConfig global_view_config = 1;
  if (this->has_global_view_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_global_view_config(), output);
  }

  // .display.LocalViewConfig local_view_config = 2;
  if (this->has_local_view_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_local_view_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:display.DisplayConfig)
}

::google::protobuf::uint8* DisplayConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:display.DisplayConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .display.GlobalViewConfig global_view_config = 1;
  if (this->has_global_view_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_global_view_config(), deterministic, target);
  }

  // .display.LocalViewConfig local_view_config = 2;
  if (this->has_local_view_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_local_view_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:display.DisplayConfig)
  return target;
}

size_t DisplayConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:display.DisplayConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .display.GlobalViewConfig global_view_config = 1;
  if (this->has_global_view_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *global_view_config_);
  }

  // .display.LocalViewConfig local_view_config = 2;
  if (this->has_local_view_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *local_view_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:display.DisplayConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:display.DisplayConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:display.DisplayConfig)
    MergeFrom(*source);
  }
}

void DisplayConfig::MergeFrom(const DisplayConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:display.DisplayConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_global_view_config()) {
    mutable_global_view_config()->::display::GlobalViewConfig::MergeFrom(from.global_view_config());
  }
  if (from.has_local_view_config()) {
    mutable_local_view_config()->::display::LocalViewConfig::MergeFrom(from.local_view_config());
  }
}

void DisplayConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:display.DisplayConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayConfig::CopyFrom(const DisplayConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:display.DisplayConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayConfig::IsInitialized() const {
  return true;
}

void DisplayConfig::Swap(DisplayConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayConfig::InternalSwap(DisplayConfig* other) {
  using std::swap;
  swap(global_view_config_, other->global_view_config_);
  swap(local_view_config_, other->local_view_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisplayConfig::GetMetadata() const {
  protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_display_2fproto_2fdisplay_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace display
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::display::GlobalViewConfig* Arena::CreateMaybeMessage< ::display::GlobalViewConfig >(Arena* arena) {
  return Arena::CreateInternal< ::display::GlobalViewConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::display::LocalViewConfig* Arena::CreateMaybeMessage< ::display::LocalViewConfig >(Arena* arena) {
  return Arena::CreateInternal< ::display::LocalViewConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::display::DisplayConfig* Arena::CreateMaybeMessage< ::display::DisplayConfig >(Arena* arena) {
  return Arena::CreateInternal< ::display::DisplayConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
