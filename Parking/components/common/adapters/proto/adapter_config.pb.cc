// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/adapters/proto/adapter_config.proto

#include "common/adapters/proto/adapter_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AdapterConfig;
}  // namespace protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto
namespace common {
namespace adapter {
class AdapterConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdapterConfig>
      _instance;
} _AdapterConfig_default_instance_;
class AdapterManagerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdapterManagerConfig>
      _instance;
} _AdapterManagerConfig_default_instance_;
}  // namespace adapter
}  // namespace common
namespace protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto {
static void InitDefaultsAdapterConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::adapter::_AdapterConfig_default_instance_;
    new (ptr) ::common::adapter::AdapterConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::adapter::AdapterConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdapterConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdapterConfig}, {}};

static void InitDefaultsAdapterManagerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::adapter::_AdapterManagerConfig_default_instance_;
    new (ptr) ::common::adapter::AdapterManagerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::adapter::AdapterManagerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AdapterManagerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAdapterManagerConfig}, {
      &protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::scc_info_AdapterConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AdapterConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdapterManagerConfig.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::adapter::AdapterConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::adapter::AdapterConfig, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::adapter::AdapterConfig, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::adapter::AdapterConfig, message_history_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::adapter::AdapterConfig, latch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::adapter::AdapterManagerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::adapter::AdapterManagerConfig, config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::common::adapter::AdapterConfig)},
  { 9, -1, sizeof(::common::adapter::AdapterManagerConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::adapter::_AdapterConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::adapter::_AdapterManagerConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "common/adapters/proto/adapter_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*common/adapters/proto/adapter_config.p"
      "roto\022\016common.adapter\"\315\002\n\rAdapterConfig\0227"
      "\n\004type\030\001 \001(\0162).common.adapter.AdapterCon"
      "fig.MessageType\0220\n\004mode\030\002 \001(\0162\".common.a"
      "dapter.AdapterConfig.Mode\022\035\n\025message_his"
      "tory_limit\030\003 \001(\005\022\r\n\005latch\030\004 \001(\010\"k\n\013Messa"
      "geType\022\013\n\007LIDAR2D\020\000\022\013\n\007GRIDMAP\020\001\022\013\n\007CHAS"
      "SIS\020\002\022\013\n\007COMMAND\020\003\022\016\n\nTRAJECTORY\020\004\022\013\n\007RE"
      "FLINE\020\005\022\013\n\007MAPPATH\020\006\"6\n\004Mode\022\020\n\014RECEIVE_"
      "ONLY\020\000\022\020\n\014PUBLISH_ONLY\020\001\022\n\n\006DUPLEX\020\002\"E\n\024"
      "AdapterManagerConfig\022-\n\006config\030\001 \003(\0132\035.c"
      "ommon.adapter.AdapterConfigb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 475);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/adapters/proto/adapter_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto
namespace common {
namespace adapter {
const ::google::protobuf::EnumDescriptor* AdapterConfig_MessageType_descriptor() {
  protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool AdapterConfig_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdapterConfig_MessageType AdapterConfig::LIDAR2D;
const AdapterConfig_MessageType AdapterConfig::GRIDMAP;
const AdapterConfig_MessageType AdapterConfig::CHASSIS;
const AdapterConfig_MessageType AdapterConfig::COMMAND;
const AdapterConfig_MessageType AdapterConfig::TRAJECTORY;
const AdapterConfig_MessageType AdapterConfig::REFLINE;
const AdapterConfig_MessageType AdapterConfig::MAPPATH;
const AdapterConfig_MessageType AdapterConfig::MessageType_MIN;
const AdapterConfig_MessageType AdapterConfig::MessageType_MAX;
const int AdapterConfig::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AdapterConfig_Mode_descriptor() {
  protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_enum_descriptors[1];
}
bool AdapterConfig_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdapterConfig_Mode AdapterConfig::RECEIVE_ONLY;
const AdapterConfig_Mode AdapterConfig::PUBLISH_ONLY;
const AdapterConfig_Mode AdapterConfig::DUPLEX;
const AdapterConfig_Mode AdapterConfig::Mode_MIN;
const AdapterConfig_Mode AdapterConfig::Mode_MAX;
const int AdapterConfig::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void AdapterConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdapterConfig::kTypeFieldNumber;
const int AdapterConfig::kModeFieldNumber;
const int AdapterConfig::kMessageHistoryLimitFieldNumber;
const int AdapterConfig::kLatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdapterConfig::AdapterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::scc_info_AdapterConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.adapter.AdapterConfig)
}
AdapterConfig::AdapterConfig(const AdapterConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&latch_) -
    reinterpret_cast<char*>(&type_)) + sizeof(latch_));
  // @@protoc_insertion_point(copy_constructor:common.adapter.AdapterConfig)
}

void AdapterConfig::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latch_) -
      reinterpret_cast<char*>(&type_)) + sizeof(latch_));
}

AdapterConfig::~AdapterConfig() {
  // @@protoc_insertion_point(destructor:common.adapter.AdapterConfig)
  SharedDtor();
}

void AdapterConfig::SharedDtor() {
}

void AdapterConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdapterConfig::descriptor() {
  ::protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdapterConfig& AdapterConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::scc_info_AdapterConfig.base);
  return *internal_default_instance();
}


void AdapterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:common.adapter.AdapterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latch_) -
      reinterpret_cast<char*>(&type_)) + sizeof(latch_));
  _internal_metadata_.Clear();
}

bool AdapterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.adapter.AdapterConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.adapter.AdapterConfig.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::common::adapter::AdapterConfig_MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.adapter.AdapterConfig.Mode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::common::adapter::AdapterConfig_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 message_history_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &message_history_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool latch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &latch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.adapter.AdapterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.adapter.AdapterConfig)
  return false;
#undef DO_
}

void AdapterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.adapter.AdapterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.adapter.AdapterConfig.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .common.adapter.AdapterConfig.Mode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // int32 message_history_limit = 3;
  if (this->message_history_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->message_history_limit(), output);
  }

  // bool latch = 4;
  if (this->latch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->latch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.adapter.AdapterConfig)
}

::google::protobuf::uint8* AdapterConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.adapter.AdapterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.adapter.AdapterConfig.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .common.adapter.AdapterConfig.Mode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // int32 message_history_limit = 3;
  if (this->message_history_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->message_history_limit(), target);
  }

  // bool latch = 4;
  if (this->latch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->latch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.adapter.AdapterConfig)
  return target;
}

size_t AdapterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.adapter.AdapterConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.adapter.AdapterConfig.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .common.adapter.AdapterConfig.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // int32 message_history_limit = 3;
  if (this->message_history_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->message_history_limit());
  }

  // bool latch = 4;
  if (this->latch() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdapterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.adapter.AdapterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AdapterConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdapterConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.adapter.AdapterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.adapter.AdapterConfig)
    MergeFrom(*source);
  }
}

void AdapterConfig::MergeFrom(const AdapterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.adapter.AdapterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.message_history_limit() != 0) {
    set_message_history_limit(from.message_history_limit());
  }
  if (from.latch() != 0) {
    set_latch(from.latch());
  }
}

void AdapterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.adapter.AdapterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdapterConfig::CopyFrom(const AdapterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.adapter.AdapterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdapterConfig::IsInitialized() const {
  return true;
}

void AdapterConfig::Swap(AdapterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdapterConfig::InternalSwap(AdapterConfig* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(mode_, other->mode_);
  swap(message_history_limit_, other->message_history_limit_);
  swap(latch_, other->latch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdapterConfig::GetMetadata() const {
  protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdapterManagerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdapterManagerConfig::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdapterManagerConfig::AdapterManagerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::scc_info_AdapterManagerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.adapter.AdapterManagerConfig)
}
AdapterManagerConfig::AdapterManagerConfig(const AdapterManagerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      config_(from.config_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.adapter.AdapterManagerConfig)
}

void AdapterManagerConfig::SharedCtor() {
}

AdapterManagerConfig::~AdapterManagerConfig() {
  // @@protoc_insertion_point(destructor:common.adapter.AdapterManagerConfig)
  SharedDtor();
}

void AdapterManagerConfig::SharedDtor() {
}

void AdapterManagerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdapterManagerConfig::descriptor() {
  ::protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdapterManagerConfig& AdapterManagerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::scc_info_AdapterManagerConfig.base);
  return *internal_default_instance();
}


void AdapterManagerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:common.adapter.AdapterManagerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  _internal_metadata_.Clear();
}

bool AdapterManagerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.adapter.AdapterManagerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.adapter.AdapterConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.adapter.AdapterManagerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.adapter.AdapterManagerConfig)
  return false;
#undef DO_
}

void AdapterManagerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.adapter.AdapterManagerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.adapter.AdapterConfig config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->config(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.adapter.AdapterManagerConfig)
}

::google::protobuf::uint8* AdapterManagerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.adapter.AdapterManagerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.adapter.AdapterConfig config = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->config(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.adapter.AdapterManagerConfig)
  return target;
}

size_t AdapterManagerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.adapter.AdapterManagerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.adapter.AdapterConfig config = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->config_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->config(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdapterManagerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.adapter.AdapterManagerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AdapterManagerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdapterManagerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.adapter.AdapterManagerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.adapter.AdapterManagerConfig)
    MergeFrom(*source);
  }
}

void AdapterManagerConfig::MergeFrom(const AdapterManagerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.adapter.AdapterManagerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
}

void AdapterManagerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.adapter.AdapterManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdapterManagerConfig::CopyFrom(const AdapterManagerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.adapter.AdapterManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdapterManagerConfig::IsInitialized() const {
  return true;
}

void AdapterManagerConfig::Swap(AdapterManagerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdapterManagerConfig::InternalSwap(AdapterManagerConfig* other) {
  using std::swap;
  CastToBase(&config_)->InternalSwap(CastToBase(&other->config_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdapterManagerConfig::GetMetadata() const {
  protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace adapter
}  // namespace common
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::adapter::AdapterConfig* Arena::CreateMaybeMessage< ::common::adapter::AdapterConfig >(Arena* arena) {
  return Arena::CreateInternal< ::common::adapter::AdapterConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::adapter::AdapterManagerConfig* Arena::CreateMaybeMessage< ::common::adapter::AdapterManagerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::common::adapter::AdapterManagerConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
