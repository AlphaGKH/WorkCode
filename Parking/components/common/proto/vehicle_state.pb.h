// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/proto/vehicle_state.proto

#ifndef PROTOBUF_INCLUDED_common_2fproto_2fvehicle_5fstate_2eproto
#define PROTOBUF_INCLUDED_common_2fproto_2fvehicle_5fstate_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fproto_2fvehicle_5fstate_2eproto 

namespace protobuf_common_2fproto_2fvehicle_5fstate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_common_2fproto_2fvehicle_5fstate_2eproto
namespace common {
class VehicleState;
class VehicleStateDefaultTypeInternal;
extern VehicleStateDefaultTypeInternal _VehicleState_default_instance_;
}  // namespace common
namespace google {
namespace protobuf {
template<> ::common::VehicleState* Arena::CreateMaybeMessage<::common::VehicleState>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace common {

// ===================================================================

class VehicleState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common.VehicleState) */ {
 public:
  VehicleState();
  virtual ~VehicleState();

  VehicleState(const VehicleState& from);

  inline VehicleState& operator=(const VehicleState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleState(VehicleState&& from) noexcept
    : VehicleState() {
    *this = ::std::move(from);
  }

  inline VehicleState& operator=(VehicleState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleState* internal_default_instance() {
    return reinterpret_cast<const VehicleState*>(
               &_VehicleState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(VehicleState* other);
  friend void swap(VehicleState& a, VehicleState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleState* New() const final {
    return CreateMaybeMessage<VehicleState>(NULL);
  }

  VehicleState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleState& from);
  void MergeFrom(const VehicleState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double theta = 3;
  void clear_theta();
  static const int kThetaFieldNumber = 3;
  double theta() const;
  void set_theta(double value);

  // double kappa = 4;
  void clear_kappa();
  static const int kKappaFieldNumber = 4;
  double kappa() const;
  void set_kappa(double value);

  // double linear_velocity = 5;
  void clear_linear_velocity();
  static const int kLinearVelocityFieldNumber = 5;
  double linear_velocity() const;
  void set_linear_velocity(double value);

  // double linear_acceleration = 6;
  void clear_linear_acceleration();
  static const int kLinearAccelerationFieldNumber = 6;
  double linear_acceleration() const;
  void set_linear_acceleration(double value);

  // double timestamp = 7;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 7;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:common.VehicleState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double theta_;
  double kappa_;
  double linear_velocity_;
  double linear_acceleration_;
  double timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_common_2fproto_2fvehicle_5fstate_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VehicleState

// double x = 1;
inline void VehicleState::clear_x() {
  x_ = 0;
}
inline double VehicleState::x() const {
  // @@protoc_insertion_point(field_get:common.VehicleState.x)
  return x_;
}
inline void VehicleState::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:common.VehicleState.x)
}

// double y = 2;
inline void VehicleState::clear_y() {
  y_ = 0;
}
inline double VehicleState::y() const {
  // @@protoc_insertion_point(field_get:common.VehicleState.y)
  return y_;
}
inline void VehicleState::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:common.VehicleState.y)
}

// double theta = 3;
inline void VehicleState::clear_theta() {
  theta_ = 0;
}
inline double VehicleState::theta() const {
  // @@protoc_insertion_point(field_get:common.VehicleState.theta)
  return theta_;
}
inline void VehicleState::set_theta(double value) {
  
  theta_ = value;
  // @@protoc_insertion_point(field_set:common.VehicleState.theta)
}

// double kappa = 4;
inline void VehicleState::clear_kappa() {
  kappa_ = 0;
}
inline double VehicleState::kappa() const {
  // @@protoc_insertion_point(field_get:common.VehicleState.kappa)
  return kappa_;
}
inline void VehicleState::set_kappa(double value) {
  
  kappa_ = value;
  // @@protoc_insertion_point(field_set:common.VehicleState.kappa)
}

// double linear_velocity = 5;
inline void VehicleState::clear_linear_velocity() {
  linear_velocity_ = 0;
}
inline double VehicleState::linear_velocity() const {
  // @@protoc_insertion_point(field_get:common.VehicleState.linear_velocity)
  return linear_velocity_;
}
inline void VehicleState::set_linear_velocity(double value) {
  
  linear_velocity_ = value;
  // @@protoc_insertion_point(field_set:common.VehicleState.linear_velocity)
}

// double linear_acceleration = 6;
inline void VehicleState::clear_linear_acceleration() {
  linear_acceleration_ = 0;
}
inline double VehicleState::linear_acceleration() const {
  // @@protoc_insertion_point(field_get:common.VehicleState.linear_acceleration)
  return linear_acceleration_;
}
inline void VehicleState::set_linear_acceleration(double value) {
  
  linear_acceleration_ = value;
  // @@protoc_insertion_point(field_set:common.VehicleState.linear_acceleration)
}

// double timestamp = 7;
inline void VehicleState::clear_timestamp() {
  timestamp_ = 0;
}
inline double VehicleState::timestamp() const {
  // @@protoc_insertion_point(field_get:common.VehicleState.timestamp)
  return timestamp_;
}
inline void VehicleState::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:common.VehicleState.timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace common

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_common_2fproto_2fvehicle_5fstate_2eproto
