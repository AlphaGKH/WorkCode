// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map/proto/created_map.proto

#include "map/proto/created_map.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_map_2fproto_2fcreated_5fmap_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_map_2fproto_2fcreated_5fmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreatedMapPoint;
}  // namespace protobuf_map_2fproto_2fcreated_5fmap_2eproto
namespace map {
class CreatedMapConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreatedMapConfig>
      _instance;
} _CreatedMapConfig_default_instance_;
class CreatedMapPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreatedMapPoint>
      _instance;
} _CreatedMapPoint_default_instance_;
class CreatedMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreatedMap>
      _instance;
} _CreatedMap_default_instance_;
}  // namespace map
namespace protobuf_map_2fproto_2fcreated_5fmap_2eproto {
static void InitDefaultsCreatedMapConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map::_CreatedMapConfig_default_instance_;
    new (ptr) ::map::CreatedMapConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map::CreatedMapConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreatedMapConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreatedMapConfig}, {}};

static void InitDefaultsCreatedMapPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map::_CreatedMapPoint_default_instance_;
    new (ptr) ::map::CreatedMapPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map::CreatedMapPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreatedMapPoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreatedMapPoint}, {}};

static void InitDefaultsCreatedMap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map::_CreatedMap_default_instance_;
    new (ptr) ::map::CreatedMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map::CreatedMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreatedMap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreatedMap}, {
      &protobuf_map_2fproto_2fcreated_5fmap_2eproto::scc_info_CreatedMapPoint.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreatedMapConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreatedMapPoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreatedMap.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapConfig, distance_thod_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapConfig, theta_thod_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapConfig, default_lane_left_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapConfig, default_lane_right_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapConfig, default_road_left_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapConfig, default_road_right_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapConfig, default_lane_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, theta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, lane_left_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, lane_right_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, road_left_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, road_right_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, speed_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMapPoint, lane_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map::CreatedMap, points_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::map::CreatedMapConfig)},
  { 12, -1, sizeof(::map::CreatedMapPoint)},
  { 27, -1, sizeof(::map::CreatedMap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::map::_CreatedMapConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::map::_CreatedMapPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::map::_CreatedMap_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "map/proto/created_map.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033map/proto/created_map.proto\022\003map\"\340\001\n\020C"
      "reatedMapConfig\022\025\n\rdistance_thod\030\001 \001(\001\022\022"
      "\n\ntheta_thod\030\002 \001(\001\022\037\n\027default_lane_left_"
      "width\030\003 \001(\001\022 \n\030default_lane_right_width\030"
      "\004 \001(\001\022\037\n\027default_road_left_width\030\005 \001(\001\022 "
      "\n\030default_road_right_width\030\006 \001(\001\022\033\n\023defa"
      "ult_lane_number\030\007 \001(\001\"\322\001\n\017CreatedMapPoin"
      "t\022\n\n\002id\030\001 \001(\005\022\t\n\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\r\n\005t"
      "heta\030\004 \001(\001\022\027\n\017lane_left_width\030\005 \001(\001\022\030\n\020l"
      "ane_right_width\030\006 \001(\001\022\027\n\017road_left_width"
      "\030\007 \001(\001\022\030\n\020road_right_width\030\010 \001(\001\022\023\n\013spee"
      "d_limit\030\t \001(\001\022\023\n\013lane_number\030\n \001(\001\"2\n\nCr"
      "eatedMap\022$\n\006points\030\001 \003(\0132\024.map.CreatedMa"
      "pPointb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 534);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "map/proto/created_map.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_map_2fproto_2fcreated_5fmap_2eproto
namespace map {

// ===================================================================

void CreatedMapConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatedMapConfig::kDistanceThodFieldNumber;
const int CreatedMapConfig::kThetaThodFieldNumber;
const int CreatedMapConfig::kDefaultLaneLeftWidthFieldNumber;
const int CreatedMapConfig::kDefaultLaneRightWidthFieldNumber;
const int CreatedMapConfig::kDefaultRoadLeftWidthFieldNumber;
const int CreatedMapConfig::kDefaultRoadRightWidthFieldNumber;
const int CreatedMapConfig::kDefaultLaneNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatedMapConfig::CreatedMapConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_2fproto_2fcreated_5fmap_2eproto::scc_info_CreatedMapConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.CreatedMapConfig)
}
CreatedMapConfig::CreatedMapConfig(const CreatedMapConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&distance_thod_, &from.distance_thod_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_lane_number_) -
    reinterpret_cast<char*>(&distance_thod_)) + sizeof(default_lane_number_));
  // @@protoc_insertion_point(copy_constructor:map.CreatedMapConfig)
}

void CreatedMapConfig::SharedCtor() {
  ::memset(&distance_thod_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_lane_number_) -
      reinterpret_cast<char*>(&distance_thod_)) + sizeof(default_lane_number_));
}

CreatedMapConfig::~CreatedMapConfig() {
  // @@protoc_insertion_point(destructor:map.CreatedMapConfig)
  SharedDtor();
}

void CreatedMapConfig::SharedDtor() {
}

void CreatedMapConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreatedMapConfig::descriptor() {
  ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatedMapConfig& CreatedMapConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_2fproto_2fcreated_5fmap_2eproto::scc_info_CreatedMapConfig.base);
  return *internal_default_instance();
}


void CreatedMapConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:map.CreatedMapConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&distance_thod_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_lane_number_) -
      reinterpret_cast<char*>(&distance_thod_)) + sizeof(default_lane_number_));
  _internal_metadata_.Clear();
}

bool CreatedMapConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.CreatedMapConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance_thod = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_thod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double theta_thod = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &theta_thod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double default_lane_left_width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_lane_left_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double default_lane_right_width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_lane_right_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double default_road_left_width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_road_left_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double default_road_right_width = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_road_right_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double default_lane_number = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_lane_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.CreatedMapConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.CreatedMapConfig)
  return false;
#undef DO_
}

void CreatedMapConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.CreatedMapConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_thod = 1;
  if (this->distance_thod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_thod(), output);
  }

  // double theta_thod = 2;
  if (this->theta_thod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->theta_thod(), output);
  }

  // double default_lane_left_width = 3;
  if (this->default_lane_left_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->default_lane_left_width(), output);
  }

  // double default_lane_right_width = 4;
  if (this->default_lane_right_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->default_lane_right_width(), output);
  }

  // double default_road_left_width = 5;
  if (this->default_road_left_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->default_road_left_width(), output);
  }

  // double default_road_right_width = 6;
  if (this->default_road_right_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->default_road_right_width(), output);
  }

  // double default_lane_number = 7;
  if (this->default_lane_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->default_lane_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map.CreatedMapConfig)
}

::google::protobuf::uint8* CreatedMapConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.CreatedMapConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_thod = 1;
  if (this->distance_thod() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_thod(), target);
  }

  // double theta_thod = 2;
  if (this->theta_thod() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->theta_thod(), target);
  }

  // double default_lane_left_width = 3;
  if (this->default_lane_left_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->default_lane_left_width(), target);
  }

  // double default_lane_right_width = 4;
  if (this->default_lane_right_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->default_lane_right_width(), target);
  }

  // double default_road_left_width = 5;
  if (this->default_road_left_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->default_road_left_width(), target);
  }

  // double default_road_right_width = 6;
  if (this->default_road_right_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->default_road_right_width(), target);
  }

  // double default_lane_number = 7;
  if (this->default_lane_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->default_lane_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map.CreatedMapConfig)
  return target;
}

size_t CreatedMapConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map.CreatedMapConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double distance_thod = 1;
  if (this->distance_thod() != 0) {
    total_size += 1 + 8;
  }

  // double theta_thod = 2;
  if (this->theta_thod() != 0) {
    total_size += 1 + 8;
  }

  // double default_lane_left_width = 3;
  if (this->default_lane_left_width() != 0) {
    total_size += 1 + 8;
  }

  // double default_lane_right_width = 4;
  if (this->default_lane_right_width() != 0) {
    total_size += 1 + 8;
  }

  // double default_road_left_width = 5;
  if (this->default_road_left_width() != 0) {
    total_size += 1 + 8;
  }

  // double default_road_right_width = 6;
  if (this->default_road_right_width() != 0) {
    total_size += 1 + 8;
  }

  // double default_lane_number = 7;
  if (this->default_lane_number() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatedMapConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.CreatedMapConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatedMapConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatedMapConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.CreatedMapConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.CreatedMapConfig)
    MergeFrom(*source);
  }
}

void CreatedMapConfig::MergeFrom(const CreatedMapConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.CreatedMapConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.distance_thod() != 0) {
    set_distance_thod(from.distance_thod());
  }
  if (from.theta_thod() != 0) {
    set_theta_thod(from.theta_thod());
  }
  if (from.default_lane_left_width() != 0) {
    set_default_lane_left_width(from.default_lane_left_width());
  }
  if (from.default_lane_right_width() != 0) {
    set_default_lane_right_width(from.default_lane_right_width());
  }
  if (from.default_road_left_width() != 0) {
    set_default_road_left_width(from.default_road_left_width());
  }
  if (from.default_road_right_width() != 0) {
    set_default_road_right_width(from.default_road_right_width());
  }
  if (from.default_lane_number() != 0) {
    set_default_lane_number(from.default_lane_number());
  }
}

void CreatedMapConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.CreatedMapConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatedMapConfig::CopyFrom(const CreatedMapConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.CreatedMapConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatedMapConfig::IsInitialized() const {
  return true;
}

void CreatedMapConfig::Swap(CreatedMapConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatedMapConfig::InternalSwap(CreatedMapConfig* other) {
  using std::swap;
  swap(distance_thod_, other->distance_thod_);
  swap(theta_thod_, other->theta_thod_);
  swap(default_lane_left_width_, other->default_lane_left_width_);
  swap(default_lane_right_width_, other->default_lane_right_width_);
  swap(default_road_left_width_, other->default_road_left_width_);
  swap(default_road_right_width_, other->default_road_right_width_);
  swap(default_lane_number_, other->default_lane_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreatedMapConfig::GetMetadata() const {
  protobuf_map_2fproto_2fcreated_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreatedMapPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatedMapPoint::kIdFieldNumber;
const int CreatedMapPoint::kXFieldNumber;
const int CreatedMapPoint::kYFieldNumber;
const int CreatedMapPoint::kThetaFieldNumber;
const int CreatedMapPoint::kLaneLeftWidthFieldNumber;
const int CreatedMapPoint::kLaneRightWidthFieldNumber;
const int CreatedMapPoint::kRoadLeftWidthFieldNumber;
const int CreatedMapPoint::kRoadRightWidthFieldNumber;
const int CreatedMapPoint::kSpeedLimitFieldNumber;
const int CreatedMapPoint::kLaneNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatedMapPoint::CreatedMapPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_2fproto_2fcreated_5fmap_2eproto::scc_info_CreatedMapPoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.CreatedMapPoint)
}
CreatedMapPoint::CreatedMapPoint(const CreatedMapPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&x_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:map.CreatedMapPoint)
}

void CreatedMapPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&x_)) + sizeof(id_));
}

CreatedMapPoint::~CreatedMapPoint() {
  // @@protoc_insertion_point(destructor:map.CreatedMapPoint)
  SharedDtor();
}

void CreatedMapPoint::SharedDtor() {
}

void CreatedMapPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreatedMapPoint::descriptor() {
  ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatedMapPoint& CreatedMapPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_2fproto_2fcreated_5fmap_2eproto::scc_info_CreatedMapPoint.base);
  return *internal_default_instance();
}


void CreatedMapPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:map.CreatedMapPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&x_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool CreatedMapPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.CreatedMapPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double theta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &theta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lane_left_width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lane_left_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lane_right_width = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lane_right_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double road_left_width = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &road_left_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double road_right_width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &road_right_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double speed_limit = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lane_number = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lane_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.CreatedMapPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.CreatedMapPoint)
  return false;
#undef DO_
}

void CreatedMapPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.CreatedMapPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // double x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // double y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // double theta = 4;
  if (this->theta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->theta(), output);
  }

  // double lane_left_width = 5;
  if (this->lane_left_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lane_left_width(), output);
  }

  // double lane_right_width = 6;
  if (this->lane_right_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->lane_right_width(), output);
  }

  // double road_left_width = 7;
  if (this->road_left_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->road_left_width(), output);
  }

  // double road_right_width = 8;
  if (this->road_right_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->road_right_width(), output);
  }

  // double speed_limit = 9;
  if (this->speed_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->speed_limit(), output);
  }

  // double lane_number = 10;
  if (this->lane_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->lane_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map.CreatedMapPoint)
}

::google::protobuf::uint8* CreatedMapPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.CreatedMapPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // double x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // double y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // double theta = 4;
  if (this->theta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->theta(), target);
  }

  // double lane_left_width = 5;
  if (this->lane_left_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lane_left_width(), target);
  }

  // double lane_right_width = 6;
  if (this->lane_right_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->lane_right_width(), target);
  }

  // double road_left_width = 7;
  if (this->road_left_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->road_left_width(), target);
  }

  // double road_right_width = 8;
  if (this->road_right_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->road_right_width(), target);
  }

  // double speed_limit = 9;
  if (this->speed_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->speed_limit(), target);
  }

  // double lane_number = 10;
  if (this->lane_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->lane_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map.CreatedMapPoint)
  return target;
}

size_t CreatedMapPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map.CreatedMapPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 2;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 3;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double theta = 4;
  if (this->theta() != 0) {
    total_size += 1 + 8;
  }

  // double lane_left_width = 5;
  if (this->lane_left_width() != 0) {
    total_size += 1 + 8;
  }

  // double lane_right_width = 6;
  if (this->lane_right_width() != 0) {
    total_size += 1 + 8;
  }

  // double road_left_width = 7;
  if (this->road_left_width() != 0) {
    total_size += 1 + 8;
  }

  // double road_right_width = 8;
  if (this->road_right_width() != 0) {
    total_size += 1 + 8;
  }

  // double speed_limit = 9;
  if (this->speed_limit() != 0) {
    total_size += 1 + 8;
  }

  // double lane_number = 10;
  if (this->lane_number() != 0) {
    total_size += 1 + 8;
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatedMapPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.CreatedMapPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatedMapPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatedMapPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.CreatedMapPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.CreatedMapPoint)
    MergeFrom(*source);
  }
}

void CreatedMapPoint::MergeFrom(const CreatedMapPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.CreatedMapPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.theta() != 0) {
    set_theta(from.theta());
  }
  if (from.lane_left_width() != 0) {
    set_lane_left_width(from.lane_left_width());
  }
  if (from.lane_right_width() != 0) {
    set_lane_right_width(from.lane_right_width());
  }
  if (from.road_left_width() != 0) {
    set_road_left_width(from.road_left_width());
  }
  if (from.road_right_width() != 0) {
    set_road_right_width(from.road_right_width());
  }
  if (from.speed_limit() != 0) {
    set_speed_limit(from.speed_limit());
  }
  if (from.lane_number() != 0) {
    set_lane_number(from.lane_number());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void CreatedMapPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.CreatedMapPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatedMapPoint::CopyFrom(const CreatedMapPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.CreatedMapPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatedMapPoint::IsInitialized() const {
  return true;
}

void CreatedMapPoint::Swap(CreatedMapPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatedMapPoint::InternalSwap(CreatedMapPoint* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(theta_, other->theta_);
  swap(lane_left_width_, other->lane_left_width_);
  swap(lane_right_width_, other->lane_right_width_);
  swap(road_left_width_, other->road_left_width_);
  swap(road_right_width_, other->road_right_width_);
  swap(speed_limit_, other->speed_limit_);
  swap(lane_number_, other->lane_number_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreatedMapPoint::GetMetadata() const {
  protobuf_map_2fproto_2fcreated_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreatedMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatedMap::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatedMap::CreatedMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_2fproto_2fcreated_5fmap_2eproto::scc_info_CreatedMap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map.CreatedMap)
}
CreatedMap::CreatedMap(const CreatedMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:map.CreatedMap)
}

void CreatedMap::SharedCtor() {
}

CreatedMap::~CreatedMap() {
  // @@protoc_insertion_point(destructor:map.CreatedMap)
  SharedDtor();
}

void CreatedMap::SharedDtor() {
}

void CreatedMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreatedMap::descriptor() {
  ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatedMap& CreatedMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_2fproto_2fcreated_5fmap_2eproto::scc_info_CreatedMap.base);
  return *internal_default_instance();
}


void CreatedMap::Clear() {
// @@protoc_insertion_point(message_clear_start:map.CreatedMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  _internal_metadata_.Clear();
}

bool CreatedMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map.CreatedMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .map.CreatedMapPoint points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map.CreatedMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map.CreatedMap)
  return false;
#undef DO_
}

void CreatedMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map.CreatedMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .map.CreatedMapPoint points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map.CreatedMap)
}

::google::protobuf::uint8* CreatedMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map.CreatedMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .map.CreatedMapPoint points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map.CreatedMap)
  return target;
}

size_t CreatedMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map.CreatedMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .map.CreatedMapPoint points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatedMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map.CreatedMap)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatedMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatedMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map.CreatedMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map.CreatedMap)
    MergeFrom(*source);
  }
}

void CreatedMap::MergeFrom(const CreatedMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map.CreatedMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
}

void CreatedMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map.CreatedMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatedMap::CopyFrom(const CreatedMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map.CreatedMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatedMap::IsInitialized() const {
  return true;
}

void CreatedMap::Swap(CreatedMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatedMap::InternalSwap(CreatedMap* other) {
  using std::swap;
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreatedMap::GetMetadata() const {
  protobuf_map_2fproto_2fcreated_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace map
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map::CreatedMapConfig* Arena::CreateMaybeMessage< ::map::CreatedMapConfig >(Arena* arena) {
  return Arena::CreateInternal< ::map::CreatedMapConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map::CreatedMapPoint* Arena::CreateMaybeMessage< ::map::CreatedMapPoint >(Arena* arena) {
  return Arena::CreateInternal< ::map::CreatedMapPoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map::CreatedMap* Arena::CreateMaybeMessage< ::map::CreatedMap >(Arena* arena) {
  return Arena::CreateInternal< ::map::CreatedMap >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
