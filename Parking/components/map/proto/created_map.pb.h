// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map/proto/created_map.proto

#ifndef PROTOBUF_INCLUDED_map_2fproto_2fcreated_5fmap_2eproto
#define PROTOBUF_INCLUDED_map_2fproto_2fcreated_5fmap_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_map_2fproto_2fcreated_5fmap_2eproto 

namespace protobuf_map_2fproto_2fcreated_5fmap_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_map_2fproto_2fcreated_5fmap_2eproto
namespace map {
class CreatedMap;
class CreatedMapDefaultTypeInternal;
extern CreatedMapDefaultTypeInternal _CreatedMap_default_instance_;
class CreatedMapConfig;
class CreatedMapConfigDefaultTypeInternal;
extern CreatedMapConfigDefaultTypeInternal _CreatedMapConfig_default_instance_;
class CreatedMapPoint;
class CreatedMapPointDefaultTypeInternal;
extern CreatedMapPointDefaultTypeInternal _CreatedMapPoint_default_instance_;
}  // namespace map
namespace google {
namespace protobuf {
template<> ::map::CreatedMap* Arena::CreateMaybeMessage<::map::CreatedMap>(Arena*);
template<> ::map::CreatedMapConfig* Arena::CreateMaybeMessage<::map::CreatedMapConfig>(Arena*);
template<> ::map::CreatedMapPoint* Arena::CreateMaybeMessage<::map::CreatedMapPoint>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace map {

// ===================================================================

class CreatedMapConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:map.CreatedMapConfig) */ {
 public:
  CreatedMapConfig();
  virtual ~CreatedMapConfig();

  CreatedMapConfig(const CreatedMapConfig& from);

  inline CreatedMapConfig& operator=(const CreatedMapConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreatedMapConfig(CreatedMapConfig&& from) noexcept
    : CreatedMapConfig() {
    *this = ::std::move(from);
  }

  inline CreatedMapConfig& operator=(CreatedMapConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatedMapConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatedMapConfig* internal_default_instance() {
    return reinterpret_cast<const CreatedMapConfig*>(
               &_CreatedMapConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreatedMapConfig* other);
  friend void swap(CreatedMapConfig& a, CreatedMapConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreatedMapConfig* New() const final {
    return CreateMaybeMessage<CreatedMapConfig>(NULL);
  }

  CreatedMapConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreatedMapConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreatedMapConfig& from);
  void MergeFrom(const CreatedMapConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatedMapConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double distance_thod = 1;
  void clear_distance_thod();
  static const int kDistanceThodFieldNumber = 1;
  double distance_thod() const;
  void set_distance_thod(double value);

  // double theta_thod = 2;
  void clear_theta_thod();
  static const int kThetaThodFieldNumber = 2;
  double theta_thod() const;
  void set_theta_thod(double value);

  // double default_lane_left_width = 3;
  void clear_default_lane_left_width();
  static const int kDefaultLaneLeftWidthFieldNumber = 3;
  double default_lane_left_width() const;
  void set_default_lane_left_width(double value);

  // double default_lane_right_width = 4;
  void clear_default_lane_right_width();
  static const int kDefaultLaneRightWidthFieldNumber = 4;
  double default_lane_right_width() const;
  void set_default_lane_right_width(double value);

  // double default_road_left_width = 5;
  void clear_default_road_left_width();
  static const int kDefaultRoadLeftWidthFieldNumber = 5;
  double default_road_left_width() const;
  void set_default_road_left_width(double value);

  // double default_road_right_width = 6;
  void clear_default_road_right_width();
  static const int kDefaultRoadRightWidthFieldNumber = 6;
  double default_road_right_width() const;
  void set_default_road_right_width(double value);

  // double default_lane_number = 7;
  void clear_default_lane_number();
  static const int kDefaultLaneNumberFieldNumber = 7;
  double default_lane_number() const;
  void set_default_lane_number(double value);

  // @@protoc_insertion_point(class_scope:map.CreatedMapConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double distance_thod_;
  double theta_thod_;
  double default_lane_left_width_;
  double default_lane_right_width_;
  double default_road_left_width_;
  double default_road_right_width_;
  double default_lane_number_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreatedMapPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:map.CreatedMapPoint) */ {
 public:
  CreatedMapPoint();
  virtual ~CreatedMapPoint();

  CreatedMapPoint(const CreatedMapPoint& from);

  inline CreatedMapPoint& operator=(const CreatedMapPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreatedMapPoint(CreatedMapPoint&& from) noexcept
    : CreatedMapPoint() {
    *this = ::std::move(from);
  }

  inline CreatedMapPoint& operator=(CreatedMapPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatedMapPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatedMapPoint* internal_default_instance() {
    return reinterpret_cast<const CreatedMapPoint*>(
               &_CreatedMapPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreatedMapPoint* other);
  friend void swap(CreatedMapPoint& a, CreatedMapPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreatedMapPoint* New() const final {
    return CreateMaybeMessage<CreatedMapPoint>(NULL);
  }

  CreatedMapPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreatedMapPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreatedMapPoint& from);
  void MergeFrom(const CreatedMapPoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatedMapPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  double x() const;
  void set_x(double value);

  // double y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  double y() const;
  void set_y(double value);

  // double theta = 4;
  void clear_theta();
  static const int kThetaFieldNumber = 4;
  double theta() const;
  void set_theta(double value);

  // double lane_left_width = 5;
  void clear_lane_left_width();
  static const int kLaneLeftWidthFieldNumber = 5;
  double lane_left_width() const;
  void set_lane_left_width(double value);

  // double lane_right_width = 6;
  void clear_lane_right_width();
  static const int kLaneRightWidthFieldNumber = 6;
  double lane_right_width() const;
  void set_lane_right_width(double value);

  // double road_left_width = 7;
  void clear_road_left_width();
  static const int kRoadLeftWidthFieldNumber = 7;
  double road_left_width() const;
  void set_road_left_width(double value);

  // double road_right_width = 8;
  void clear_road_right_width();
  static const int kRoadRightWidthFieldNumber = 8;
  double road_right_width() const;
  void set_road_right_width(double value);

  // double speed_limit = 9;
  void clear_speed_limit();
  static const int kSpeedLimitFieldNumber = 9;
  double speed_limit() const;
  void set_speed_limit(double value);

  // double lane_number = 10;
  void clear_lane_number();
  static const int kLaneNumberFieldNumber = 10;
  double lane_number() const;
  void set_lane_number(double value);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:map.CreatedMapPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double theta_;
  double lane_left_width_;
  double lane_right_width_;
  double road_left_width_;
  double road_right_width_;
  double speed_limit_;
  double lane_number_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreatedMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:map.CreatedMap) */ {
 public:
  CreatedMap();
  virtual ~CreatedMap();

  CreatedMap(const CreatedMap& from);

  inline CreatedMap& operator=(const CreatedMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreatedMap(CreatedMap&& from) noexcept
    : CreatedMap() {
    *this = ::std::move(from);
  }

  inline CreatedMap& operator=(CreatedMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatedMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatedMap* internal_default_instance() {
    return reinterpret_cast<const CreatedMap*>(
               &_CreatedMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CreatedMap* other);
  friend void swap(CreatedMap& a, CreatedMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreatedMap* New() const final {
    return CreateMaybeMessage<CreatedMap>(NULL);
  }

  CreatedMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreatedMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreatedMap& from);
  void MergeFrom(const CreatedMap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatedMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .map.CreatedMapPoint points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  ::map::CreatedMapPoint* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::map::CreatedMapPoint >*
      mutable_points();
  const ::map::CreatedMapPoint& points(int index) const;
  ::map::CreatedMapPoint* add_points();
  const ::google::protobuf::RepeatedPtrField< ::map::CreatedMapPoint >&
      points() const;

  // @@protoc_insertion_point(class_scope:map.CreatedMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::map::CreatedMapPoint > points_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_map_2fproto_2fcreated_5fmap_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreatedMapConfig

// double distance_thod = 1;
inline void CreatedMapConfig::clear_distance_thod() {
  distance_thod_ = 0;
}
inline double CreatedMapConfig::distance_thod() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapConfig.distance_thod)
  return distance_thod_;
}
inline void CreatedMapConfig::set_distance_thod(double value) {
  
  distance_thod_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapConfig.distance_thod)
}

// double theta_thod = 2;
inline void CreatedMapConfig::clear_theta_thod() {
  theta_thod_ = 0;
}
inline double CreatedMapConfig::theta_thod() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapConfig.theta_thod)
  return theta_thod_;
}
inline void CreatedMapConfig::set_theta_thod(double value) {
  
  theta_thod_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapConfig.theta_thod)
}

// double default_lane_left_width = 3;
inline void CreatedMapConfig::clear_default_lane_left_width() {
  default_lane_left_width_ = 0;
}
inline double CreatedMapConfig::default_lane_left_width() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapConfig.default_lane_left_width)
  return default_lane_left_width_;
}
inline void CreatedMapConfig::set_default_lane_left_width(double value) {
  
  default_lane_left_width_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapConfig.default_lane_left_width)
}

// double default_lane_right_width = 4;
inline void CreatedMapConfig::clear_default_lane_right_width() {
  default_lane_right_width_ = 0;
}
inline double CreatedMapConfig::default_lane_right_width() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapConfig.default_lane_right_width)
  return default_lane_right_width_;
}
inline void CreatedMapConfig::set_default_lane_right_width(double value) {
  
  default_lane_right_width_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapConfig.default_lane_right_width)
}

// double default_road_left_width = 5;
inline void CreatedMapConfig::clear_default_road_left_width() {
  default_road_left_width_ = 0;
}
inline double CreatedMapConfig::default_road_left_width() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapConfig.default_road_left_width)
  return default_road_left_width_;
}
inline void CreatedMapConfig::set_default_road_left_width(double value) {
  
  default_road_left_width_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapConfig.default_road_left_width)
}

// double default_road_right_width = 6;
inline void CreatedMapConfig::clear_default_road_right_width() {
  default_road_right_width_ = 0;
}
inline double CreatedMapConfig::default_road_right_width() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapConfig.default_road_right_width)
  return default_road_right_width_;
}
inline void CreatedMapConfig::set_default_road_right_width(double value) {
  
  default_road_right_width_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapConfig.default_road_right_width)
}

// double default_lane_number = 7;
inline void CreatedMapConfig::clear_default_lane_number() {
  default_lane_number_ = 0;
}
inline double CreatedMapConfig::default_lane_number() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapConfig.default_lane_number)
  return default_lane_number_;
}
inline void CreatedMapConfig::set_default_lane_number(double value) {
  
  default_lane_number_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapConfig.default_lane_number)
}

// -------------------------------------------------------------------

// CreatedMapPoint

// int32 id = 1;
inline void CreatedMapPoint::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CreatedMapPoint::id() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.id)
  return id_;
}
inline void CreatedMapPoint::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.id)
}

// double x = 2;
inline void CreatedMapPoint::clear_x() {
  x_ = 0;
}
inline double CreatedMapPoint::x() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.x)
  return x_;
}
inline void CreatedMapPoint::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.x)
}

// double y = 3;
inline void CreatedMapPoint::clear_y() {
  y_ = 0;
}
inline double CreatedMapPoint::y() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.y)
  return y_;
}
inline void CreatedMapPoint::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.y)
}

// double theta = 4;
inline void CreatedMapPoint::clear_theta() {
  theta_ = 0;
}
inline double CreatedMapPoint::theta() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.theta)
  return theta_;
}
inline void CreatedMapPoint::set_theta(double value) {
  
  theta_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.theta)
}

// double lane_left_width = 5;
inline void CreatedMapPoint::clear_lane_left_width() {
  lane_left_width_ = 0;
}
inline double CreatedMapPoint::lane_left_width() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.lane_left_width)
  return lane_left_width_;
}
inline void CreatedMapPoint::set_lane_left_width(double value) {
  
  lane_left_width_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.lane_left_width)
}

// double lane_right_width = 6;
inline void CreatedMapPoint::clear_lane_right_width() {
  lane_right_width_ = 0;
}
inline double CreatedMapPoint::lane_right_width() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.lane_right_width)
  return lane_right_width_;
}
inline void CreatedMapPoint::set_lane_right_width(double value) {
  
  lane_right_width_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.lane_right_width)
}

// double road_left_width = 7;
inline void CreatedMapPoint::clear_road_left_width() {
  road_left_width_ = 0;
}
inline double CreatedMapPoint::road_left_width() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.road_left_width)
  return road_left_width_;
}
inline void CreatedMapPoint::set_road_left_width(double value) {
  
  road_left_width_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.road_left_width)
}

// double road_right_width = 8;
inline void CreatedMapPoint::clear_road_right_width() {
  road_right_width_ = 0;
}
inline double CreatedMapPoint::road_right_width() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.road_right_width)
  return road_right_width_;
}
inline void CreatedMapPoint::set_road_right_width(double value) {
  
  road_right_width_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.road_right_width)
}

// double speed_limit = 9;
inline void CreatedMapPoint::clear_speed_limit() {
  speed_limit_ = 0;
}
inline double CreatedMapPoint::speed_limit() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.speed_limit)
  return speed_limit_;
}
inline void CreatedMapPoint::set_speed_limit(double value) {
  
  speed_limit_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.speed_limit)
}

// double lane_number = 10;
inline void CreatedMapPoint::clear_lane_number() {
  lane_number_ = 0;
}
inline double CreatedMapPoint::lane_number() const {
  // @@protoc_insertion_point(field_get:map.CreatedMapPoint.lane_number)
  return lane_number_;
}
inline void CreatedMapPoint::set_lane_number(double value) {
  
  lane_number_ = value;
  // @@protoc_insertion_point(field_set:map.CreatedMapPoint.lane_number)
}

// -------------------------------------------------------------------

// CreatedMap

// repeated .map.CreatedMapPoint points = 1;
inline int CreatedMap::points_size() const {
  return points_.size();
}
inline void CreatedMap::clear_points() {
  points_.Clear();
}
inline ::map::CreatedMapPoint* CreatedMap::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:map.CreatedMap.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::map::CreatedMapPoint >*
CreatedMap::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:map.CreatedMap.points)
  return &points_;
}
inline const ::map::CreatedMapPoint& CreatedMap::points(int index) const {
  // @@protoc_insertion_point(field_get:map.CreatedMap.points)
  return points_.Get(index);
}
inline ::map::CreatedMapPoint* CreatedMap::add_points() {
  // @@protoc_insertion_point(field_add:map.CreatedMap.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::map::CreatedMapPoint >&
CreatedMap::points() const {
  // @@protoc_insertion_point(field_list:map.CreatedMap.points)
  return points_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace map

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_map_2fproto_2fcreated_5fmap_2eproto
